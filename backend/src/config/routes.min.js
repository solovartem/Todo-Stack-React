const express=require("express"),routes=express.Router(),Todo=require("../api/todo/Todo");routes.get("/",(req,res)=>res.send("\n    API para CRUD simples feita com Sequelize/MYSQL!\n    <br>\n    <br>\n    Para listagem de dados acesse: '/list'\n    <br>\n    Para adicionar: '/add'\n    <br>\n    Para edição: '/putMark/:id'\n    <br>\n    Para deletar: '/delete/:id'\n    <br>\n    <br>\n    GitHub: https://github.com/douglasgodoy1998\n")),routes.get("/list",async(req,res)=>{const attributes={attributes:["id","description","mark"],raw:!0},list=await Todo.findAll(attributes).then(list=>list).catch(err=>res.send(err));return res.send(list.map(l=>l))}),routes.post("/add",async(req,res)=>{const description=req.body.description;return description?(Todo.create({description:description}).catch(err=>res.json({error:!0,msg:err})),res.json({error:!1,msg:"Success"})):res.json({error:!0,msg:"Format description is not valid!"})}),routes.delete("/delete/:id",async(req,res)=>{const id=req.params.id,deleteTodo=await Todo.destroy({where:{id:id}}).then(e=>"Removed data successfully!").catch(err=>err);return res.send(deleteTodo)}),routes.put("/putMark/:id",async(req,res)=>{const id=req.params.id,db=require("../../models/index"),atualMark=await Todo.findOne({where:{id:id},attributes:["mark","id"]}).then(mark=>mark.dataValues),dinamicMark=!atualMark.mark,query=db.query(`UPDATE todoschemas set mark = ${dinamicMark} WHERE id = ${id}`).then(result=>{}).catch(err=>res.json({error:!0,msg:err}));return res.json(query)}),routes.put("/putTodo/:id",async(req,res)=>{const id=req.params.id,description=req.body.description,updateTodo=await Todo.update({description:description},{where:{id:id}}).then(resp=>console.log(resp)).catch(err=>err);return res.json(updateTodo)}),module.exports=routes;